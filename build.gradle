apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'

defaultTasks 'clean', 'test', 'jar'

group = 'com.timgroup'
ext.url = 'https://github.com/tim-group/make-it-easy-templates'

sourceCompatibility = 1.6
targetCompatibility = 1.6

def isReleaseVersion = System.getenv('BUILD_NUMBER') != null
def patchVersion = isReleaseVersion ? System.getenv('BUILD_NUMBER') : new Date().format('yyyyMMdd-HHmmss', TimeZone.getTimeZone('UTC'))
def patchSeparator = isReleaseVersion ? '.' : '-'
version = "1.0${patchSeparator}${patchVersion}"

repositories {
    mavenLocal()
    maven {
        url "${repoUrl}/groups/public"
    }
}

jar {
    manifest { 
        attributes(
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor': 'youDevise Ltd',
            'Implementation-Vendor-Id': project.group,
            'Implementation-URL': project.url
        )
    }
}

dependencies {
    compile      group: 'com.natpryce',      name: 'make-it-easy',        version: '4.0.1'
    testCompile (group: 'junit',             name: 'junit',               version: '4.12') {
        exclude module: 'hamcrest-core'
    }
    testCompile  group: 'org.hamcrest',      name: 'hamcrest-junit',      version: '2.0.0.0'
}

task sourcesJar(type: Jar, dependsOn:classes) {
     classifier = 'sources'
     from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

task pom {
    ext.pom = pom {
        project {
            name project.name
            description "A trivial extension to Nat Pryce's make-it-easy library allowing data templates to be defined"
            url project.url

            packaging 'jar'

            scm {
                url "scm:${project.url}"
                connection 'scm:git:https://github.com/tim-group/make-it-easy-templates.git'
                developerConnection 'scm:git:git://github.com/tim-group/make-it-easy-templates.git'
            }

            developers {
                developer {
                    email 'opensource@timgroup.com'
                }
            }
        }
    }
    doLast {
        pom.writeTo("$buildDir/pom.xml")
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${project.repoUrl}/repositories/yd-release-candidates") {
                authentication(userName: project.repoUsername, password: project.repoPassword)
            }
        }
    }
}
